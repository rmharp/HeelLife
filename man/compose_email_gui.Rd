% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scripting_functions.R
\name{compose_email_gui}
\alias{compose_email_gui}
\title{Compose Email with Rich Text GUI}
\usage{
compose_email_gui(initial_text = "", window_title = "Email Composer")
}
\arguments{
\item{initial_text}{Optional initial text to pre-populate the editor}

\item{window_title}{Title for the GUI window (default: "Email Composer")}
}
\value{
HTML string of the composed email if saved, NULL if cancelled
}
\description{
Opens an interactive GUI for composing emails with rich text formatting options.
Users can format text with bold, italic, underline, different fonts, and font sizes,
then save the composed email as HTML content for use with email functions.
}
\details{
This function creates a Shiny web application that provides a familiar email
composition experience similar to popular email clients. Users can:
- Type and format email content with rich text options
- Preview the formatted email in real-time
- Save the email as a draft (returns HTML content)
- Cancel composition (returns NULL)

The GUI includes:
- Rich text editor with formatting toolbar
- Real-time HTML preview
- Font family and size selection
- Text alignment options
- Color picker for text
- Save draft and cancel buttons
}
\examples{
\dontrun{
# Open the email composer GUI
email_html <- compose_email_gui()

# If email was composed and saved, use it with your email functions
if (!is.null(email_html)) {
  send_dept_emails_heelmail(
    contacts_df = contacts,
    username = "your_onyen",
    password = "your_password",
    subject = "Important Announcement",
    email_body = email_html
  )
}

# Pre-populate with some text
email_html <- compose_email_gui(
  initial_text = "Hello,\n\nThis is a test email."
)
}
}
